image: $CONTAINER_TEST_IMAGE

variables:
  CONTAINER_TEST_IMAGE: gitlab-registry.mpcdf.mpg.de/$CI_PROJECT_PATH:$CI_BUILD_REF_NAME

stages:
  - build_docker
  - testing
#  - demos
  - release

build_docker:
  image: docker
  stage: build_docker
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN gitlab-registry.mpcdf.mpg.de
    - docker build -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

test_gcc:
  stage: testing
  script:
    - python3 setup.py sdist
    - 'tar xvzf dist/ducc0*.tar.gz'
    - 'cd ducc0-* && python3 setup.py install --user && python3 -m pytest -q python/test'

test_clang:
  stage: testing
  script:
    - python3 setup.py sdist
    - 'tar xvzf dist/ducc0*.tar.gz'
    - 'cd ducc0-* && CC=clang CXX=clang++ python3 setup.py install --user && python3 -m pytest -q python/test'

test_alpine:
  image: alpine:latest
  stage: testing
  script:
    - apk add python3 python3-dev py3-pytest py3-pytest py3-numpy py3-setuptools py3-pybind11-dev g++
    - python3 setup.py install && python3 -m pytest -q python/test

# test_alpine_distribution:
#   image: alpine:edge
#   stage: testing
#   script:
#     - apk add --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing py3-ducc0
#     - apk add py3-pytest py3-pytest py3-numpy
#     - python3 -m pytest python/test
#   allow_failure: true

test_alpine_version:
  image: alpine:edge
  stage: testing
  script:
    - apk add --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing py3-ducc0 git py3-pip
    - pip download ducc0
    - python3 -c 'import ducc0; print(ducc0.__version__)'
    - ls ducc0* | cut -d "-" -f 2
    - if [ "`python3 -c 'import ducc0; print(ducc0.__version__)'`" != "`ls ducc0* | cut -d '-' -f 2`" ]; then echo "Ducc version on PyPI and on alpine linux package manager are not in sync!" && exit 1; fi
  allow_failure: true

#wgridding_demo:
#  stage: demos
#  script:
#    - python3 setup.py install --user -f && python3 python/demos/wgridder_python_implementations.py

release:
  stage: release
  script:
    - python3 setup.py sdist
    - 'mv dist/*.tar.gz .'
  artifacts:
    paths:
      - '*.tar.gz'

pages:
  stage: release
  script:
    - DUCC0_OPTIMIZATION=none python3 -m pip install --user .
    - make -C doc html
    - 'cd src/doc && doxygen Doxyfile && cd ../..'
    - mv doc/build/html public
    - mv src/doc/build/html public/cpp
  artifacts:
    paths:
    - public
  only:
    - ducc0
